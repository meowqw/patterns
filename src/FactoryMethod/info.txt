Паттерн "Фабричный метод" (Factory Method pattern) относится к паттернам проектирования и представляет собой порождающий паттерн.
Он используется для создания объектов без указания конкретного класса создаваемого объекта.

Основная идея паттерна заключается в выделении общего интерфейса для создания объектов,
 но делегировании фактической логики создания наследникам.
  То есть, вместо создания объекта напрямую, клиентский код использует фабричный метод,
   предоставленный базовым классом или интерфейсом, чтобы создать объект нужного типа.


Плюсы паттерна "Фабричный метод":
Гибкость и расширяемость. Паттерн позволяет добавлять новые классы, реализующие общий интерфейс,
 без изменения существующего клиентского кода.
Разделение обязанностей. Создание объектов выносится в отдельный метод или класс,
 что позволяет изолировать логику создания от остальной логики приложения.
Поддержка принципа "Открыт для расширения, закрыт для изменения" (Open-Closed Principle).

Минусы паттерна "Фабричный метод":
Усложнение структуры кода. Введение дополнительных классов и методов может усложнить код и увеличить его объем.
Увеличение числа классов. Паттерн может привести к увеличению числа классов в программе, что может затруднить поддержку и понимание кода.

Паттерн "Фабричный метод" применяется в следующих случаях:
Когда система должна быть независимой от способа создания и компоновки объектов.
Когда необходимо создавать объекты в соответствии с определенными условиями или параметрами.
Когда требуется обеспечить расширяемость системы с возможностью добавления новых типов объектов без изменения существующего кода.
Когда нужно предоставить клиентскому коду возможность выбора конкретного класса объекта для создания.
